version: "3.9"
services:
  database:
    image: "postgres:${PGVERSION:-13-alpine}"
    restart: on-failure
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-gamemaster}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SuperSecretPassword}"
      - "POSTGRES_DB=${POSTGRES_DB:-febang}"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - "./initial_database.sql:/docker-entrypoint-initdb.d/initial_database.sql"
      - "./db/postgres:/var/lib/postgresql/data"
    networks:
      - api_database

  api_go:
    build: ./api_go
    volumes:
      - "./api_go:/code"
    depends_on:
      - database
    networks:
      - nginx_api
      - moderation_api
      - api_database

  frontend_react:
    build: ./frontend_react
    volumes:
      - "./frontend_react/src:/app/src"
      - "./frontend_react/public:/app/public"
    depends_on:
      - database
      - api_go
    environment:
      - "PORT=80"
    networks:
      - nginx_frontend

  moderation_django:
    build: ./moderation_django
    volumes:
      - "./moderation_django:/code"
    depends_on: 
      - database
      - api_go
    networks:
      - nginx_moderation
      - moderation_api

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - "./frontend_react/build/:/etc/nginx/src/"
      - "./nginx/nginx_${FRONTEND_BUILD:-debug}.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/ssl/:/etc/ssl/"
      - "./nginx/mime.type:/etc/nginx/mime.type"
    ports:
      - "${NGINX_EXTERNAL_PORT:-80}:80"
    networks:
      - nginx_frontend
      - nginx_api
      - nginx_moderation
    depends_on:
      - database
      - api_go
      - frontend_react
      - moderation_django

networks:
  nginx_frontend:
    driver: bridge
  nginx_api:
    driver: bridge
  nginx_moderation:
    driver: bridge
  moderation_api:
    driver: bridge
  api_database:
    driver: bridge
